{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5002/api';const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle token expiration\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});const authService={login:async credentials=>{const response=await api.post('/auth/login',credentials);return response;},register:async userData=>{const response=await api.post('/auth/register',userData);return response;},logout:async()=>{const response=await api.get('/auth/logout');return response;},getCurrentUser:async()=>{const response=await api.get('/auth/me');return response;},updateProfile:async userData=>{const response=await api.put('/auth/updatedetails',userData);return response;},updatePassword:async passwordData=>{const response=await api.put('/auth/updatepassword',passwordData);return response;}};export default authService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","credentials","post","register","userData","logout","get","getCurrentUser","updateProfile","put","updatePassword","passwordData"],"sources":["/workspace/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst authService = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  },\n\n  logout: async () => {\n    const response = await api.get('/auth/logout');\n    return response;\n  },\n\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response;\n  },\n\n  updateProfile: async (userData) => {\n    const response = await api.put('/auth/updatedetails', userData);\n    return response;\n  },\n\n  updatePassword: async (passwordData) => {\n    const response = await api.put('/auth/updatepassword', passwordData);\n    return response;\n  },\n};\n\nexport default authService;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,OAAO,CAChBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAU,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAAC0B,IAAI,CAAC,aAAa,CAAED,WAAW,CAAC,CAC3D,MAAO,CAAAT,QAAQ,CACjB,CAAC,CAEDW,QAAQ,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC5B,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,CAAEE,QAAQ,CAAC,CAC3D,MAAO,CAAAZ,QAAQ,CACjB,CAAC,CAEDa,MAAM,CAAE,KAAAA,CAAA,GAAY,CAClB,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAAC8B,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAd,QAAQ,CACjB,CAAC,CAEDe,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAAC8B,GAAG,CAAC,UAAU,CAAC,CAC1C,MAAO,CAAAd,QAAQ,CACjB,CAAC,CAEDgB,aAAa,CAAE,KAAO,CAAAJ,QAAQ,EAAK,CACjC,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiC,GAAG,CAAC,qBAAqB,CAAEL,QAAQ,CAAC,CAC/D,MAAO,CAAAZ,QAAQ,CACjB,CAAC,CAEDkB,cAAc,CAAE,KAAO,CAAAC,YAAY,EAAK,CACtC,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiC,GAAG,CAAC,sBAAsB,CAAEE,YAAY,CAAC,CACpE,MAAO,CAAAnB,QAAQ,CACjB,CACF,CAAC,CAED,cAAe,CAAAO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}