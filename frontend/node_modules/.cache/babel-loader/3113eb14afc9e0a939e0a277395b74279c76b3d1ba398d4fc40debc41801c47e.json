{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst authService = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  },\n  logout: async () => {\n    const response = await api.get('/auth/logout');\n    return response;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response;\n  },\n  updateProfile: async userData => {\n    const response = await api.put('/auth/updatedetails', userData);\n    return response;\n  },\n  updatePassword: async passwordData => {\n    const response = await api.put('/auth/updatepassword', passwordData);\n    return response;\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","credentials","post","register","userData","logout","get","getCurrentUser","updateProfile","put","updatePassword","passwordData"],"sources":["/home/konaduprince26/Downloads/QuizMaster-Pro/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst authService = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response;\n  },\n\n  logout: async () => {\n    const response = await api.get('/auth/logout');\n    return response;\n  },\n\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response;\n  },\n\n  updateProfile: async (userData) => {\n    const response = await api.put('/auth/updatedetails', userData);\n    return response;\n  },\n\n  updatePassword: async (passwordData) => {\n    const response = await api.put('/auth/updatepassword', passwordData);\n    return response;\n  },\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMU,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC3D,OAAOT,QAAQ;EACjB,CAAC;EAEDW,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMZ,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;IAC3D,OAAOZ,QAAQ;EACjB,CAAC;EAEDa,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMb,QAAQ,GAAG,MAAMf,GAAG,CAAC6B,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOd,QAAQ;EACjB,CAAC;EAEDe,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMf,QAAQ,GAAG,MAAMf,GAAG,CAAC6B,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOd,QAAQ;EACjB,CAAC;EAEDgB,aAAa,EAAE,MAAOJ,QAAQ,IAAK;IACjC,MAAMZ,QAAQ,GAAG,MAAMf,GAAG,CAACgC,GAAG,CAAC,qBAAqB,EAAEL,QAAQ,CAAC;IAC/D,OAAOZ,QAAQ;EACjB,CAAC;EAEDkB,cAAc,EAAE,MAAOC,YAAY,IAAK;IACtC,MAAMnB,QAAQ,GAAG,MAAMf,GAAG,CAACgC,GAAG,CAAC,sBAAsB,EAAEE,YAAY,CAAC;IACpE,OAAOnB,QAAQ;EACjB;AACF,CAAC;AAED,eAAeO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}