{"ast":null,"code":"var _jsxFileName = \"/home/konaduprince26/Downloads/QuizMaster-Pro/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCredentials, clearCredentials } from '../store/slices/authSlice';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const dispatch = useDispatch();\n  const {\n    user,\n    token,\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authService.getCurrentUser();\n          dispatch(setCredentials({\n            user: response.data,\n            token\n          }));\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch(clearCredentials());\n        }\n      }\n      setIsLoading(false);\n    };\n    initializeAuth();\n  }, [dispatch]);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      dispatch(setCredentials(response.data));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      dispatch(setCredentials(response.data));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch(clearCredentials());\n    }\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"OiDveg0veQP6POsE0afk6KzDQfw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useSelector","useDispatch","setCredentials","clearCredentials","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","user","token","isAuthenticated","state","auth","isLoading","setIsLoading","initializeAuth","localStorage","getItem","response","getCurrentUser","data","error","removeItem","login","credentials","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/konaduprince26/Downloads/QuizMaster-Pro/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCredentials, clearCredentials } from '../store/slices/authSlice';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const dispatch = useDispatch();\n  const { user, token, isAuthenticated } = useSelector((state) => state.auth);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authService.getCurrentUser();\n          dispatch(setCredentials({ user: response.data, token }));\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch(clearCredentials());\n        }\n      }\n      setIsLoading(false);\n    };\n\n    initializeAuth();\n  }, [dispatch]);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authService.login(credentials);\n      dispatch(setCredentials(response.data));\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authService.register(userData);\n      dispatch(setCredentials(response.data));\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch(clearCredentials());\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}