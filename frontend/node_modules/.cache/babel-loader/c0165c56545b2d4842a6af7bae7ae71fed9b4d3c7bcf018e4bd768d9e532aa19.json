{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5002/api';const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});const quizService={getQuizzes:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/quizzes',{params});return response;},getQuizById:async id=>{const response=await api.get(\"/quizzes/\".concat(id));return response;},createQuiz:async quizData=>{const response=await api.post('/quizzes',quizData);return response;},updateQuiz:async(id,quizData)=>{const response=await api.put(\"/quizzes/\".concat(id),quizData);return response;},deleteQuiz:async id=>{const response=await api.delete(\"/quizzes/\".concat(id));return response;},submitQuiz:async(quizId,answers)=>{const response=await api.post(\"/quizzes/\".concat(quizId,\"/submit\"),{answers});return response;},getQuizResults:async(quizId,attemptId)=>{const response=await api.get(\"/quizzes/\".concat(quizId,\"/results/\").concat(attemptId));return response;},getUserQuizzes:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/quizzes/my',{params});return response;},getQuizAttempts:async quizId=>{const response=await api.get(\"/quizzes/\".concat(quizId,\"/attempts\"));return response;}};export default quizService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","quizService","getQuizzes","params","arguments","length","undefined","response","get","getQuizById","id","createQuiz","quizData","post","updateQuiz","put","deleteQuiz","delete","submitQuiz","quizId","answers","getQuizResults","attemptId","getUserQuizzes","getQuizAttempts"],"sources":["/workspace/frontend/src/services/quizService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nconst quizService = {\n  getQuizzes: async (params = {}) => {\n    const response = await api.get('/quizzes', { params });\n    return response;\n  },\n\n  getQuizById: async (id) => {\n    const response = await api.get(`/quizzes/${id}`);\n    return response;\n  },\n\n  createQuiz: async (quizData) => {\n    const response = await api.post('/quizzes', quizData);\n    return response;\n  },\n\n  updateQuiz: async (id, quizData) => {\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return response;\n  },\n\n  deleteQuiz: async (id) => {\n    const response = await api.delete(`/quizzes/${id}`);\n    return response;\n  },\n\n  submitQuiz: async (quizId, answers) => {\n    const response = await api.post(`/quizzes/${quizId}/submit`, { answers });\n    return response;\n  },\n\n  getQuizResults: async (quizId, attemptId) => {\n    const response = await api.get(`/quizzes/${quizId}/results/${attemptId}`);\n    return response;\n  },\n\n  getUserQuizzes: async (params = {}) => {\n    const response = await api.get('/quizzes/my', { params });\n    return response;\n  },\n\n  getQuizAttempts: async (quizId) => {\n    const response = await api.get(`/quizzes/${quizId}/attempts`);\n    return response;\n  },\n};\n\nexport default quizService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}