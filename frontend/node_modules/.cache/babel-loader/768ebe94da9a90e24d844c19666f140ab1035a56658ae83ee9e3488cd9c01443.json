{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport quizService from '../../services/quizService';\n\n// Async thunks\nexport const fetchQuizzes = createAsyncThunk('quiz/fetchQuizzes', async (params, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await quizService.getQuizzes(params);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch quizzes');\n  }\n});\nexport const fetchQuizById = createAsyncThunk('quiz/fetchQuizById', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await quizService.getQuizById(id);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch quiz');\n  }\n});\nexport const createQuiz = createAsyncThunk('quiz/createQuiz', async (quizData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await quizService.createQuiz(quizData);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create quiz');\n  }\n});\nexport const submitQuiz = createAsyncThunk('quiz/submitQuiz', async ({\n  quizId,\n  answers\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await quizService.submitQuiz(quizId, answers);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to submit quiz');\n  }\n});\nconst initialState = {\n  quizzes: [],\n  currentQuiz: null,\n  quizResults: null,\n  isLoading: false,\n  error: null,\n  pagination: {\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  }\n};\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentQuiz: state => {\n      state.currentQuiz = null;\n    },\n    clearQuizResults: state => {\n      state.quizResults = null;\n    },\n    setCurrentPage: (state, action) => {\n      state.pagination.currentPage = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch Quizzes\n    .addCase(fetchQuizzes.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchQuizzes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.quizzes = action.payload.quizzes;\n      state.pagination = action.payload.pagination;\n    }).addCase(fetchQuizzes.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Fetch Quiz by ID\n    .addCase(fetchQuizById.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchQuizById.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.currentQuiz = action.payload;\n    }).addCase(fetchQuizById.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Create Quiz\n    .addCase(createQuiz.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createQuiz.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.quizzes.unshift(action.payload);\n    }).addCase(createQuiz.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Submit Quiz\n    .addCase(submitQuiz.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(submitQuiz.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.quizResults = action.payload;\n    }).addCase(submitQuiz.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCurrentQuiz,\n  clearQuizResults,\n  setCurrentPage\n} = quizSlice.actions;\nexport default quizSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","quizService","fetchQuizzes","params","rejectWithValue","response","getQuizzes","data","error","_error$response","_error$response$data","message","fetchQuizById","id","getQuizById","_error$response2","_error$response2$data","createQuiz","quizData","_error$response3","_error$response3$data","submitQuiz","quizId","answers","_error$response4","_error$response4$data","initialState","quizzes","currentQuiz","quizResults","isLoading","pagination","currentPage","totalPages","totalItems","quizSlice","name","reducers","clearError","state","clearCurrentQuiz","clearQuizResults","setCurrentPage","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","unshift","actions","reducer"],"sources":["/home/konaduprince26/Downloads/QuizMaster-Pro/frontend/src/store/slices/quizSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport quizService from '../../services/quizService';\n\n// Async thunks\nexport const fetchQuizzes = createAsyncThunk(\n  'quiz/fetchQuizzes',\n  async (params, { rejectWithValue }) => {\n    try {\n      const response = await quizService.getQuizzes(params);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch quizzes');\n    }\n  }\n);\n\nexport const fetchQuizById = createAsyncThunk(\n  'quiz/fetchQuizById',\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await quizService.getQuizById(id);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch quiz');\n    }\n  }\n);\n\nexport const createQuiz = createAsyncThunk(\n  'quiz/createQuiz',\n  async (quizData, { rejectWithValue }) => {\n    try {\n      const response = await quizService.createQuiz(quizData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to create quiz');\n    }\n  }\n);\n\nexport const submitQuiz = createAsyncThunk(\n  'quiz/submitQuiz',\n  async ({ quizId, answers }, { rejectWithValue }) => {\n    try {\n      const response = await quizService.submitQuiz(quizId, answers);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to submit quiz');\n    }\n  }\n);\n\nconst initialState = {\n  quizzes: [],\n  currentQuiz: null,\n  quizResults: null,\n  isLoading: false,\n  error: null,\n  pagination: {\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0,\n  },\n};\n\nconst quizSlice = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearCurrentQuiz: (state) => {\n      state.currentQuiz = null;\n    },\n    clearQuizResults: (state) => {\n      state.quizResults = null;\n    },\n    setCurrentPage: (state, action) => {\n      state.pagination.currentPage = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch Quizzes\n      .addCase(fetchQuizzes.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchQuizzes.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.quizzes = action.payload.quizzes;\n        state.pagination = action.payload.pagination;\n      })\n      .addCase(fetchQuizzes.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // Fetch Quiz by ID\n      .addCase(fetchQuizById.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchQuizById.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.currentQuiz = action.payload;\n      })\n      .addCase(fetchQuizById.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // Create Quiz\n      .addCase(createQuiz.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(createQuiz.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.quizzes.unshift(action.payload);\n      })\n      .addCase(createQuiz.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // Submit Quiz\n      .addCase(submitQuiz.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(submitQuiz.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.quizResults = action.payload;\n      })\n      .addCase(submitQuiz.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { clearError, clearCurrentQuiz, clearQuizResults, setCurrentPage } = quizSlice.actions;\nexport default quizSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}